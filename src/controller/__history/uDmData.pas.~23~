unit uDmData;

interface

uses
  SysUtils, Classes, WideStrings, DB, SqlExpr, DBXFirebird, FMTBcd, Provider,
  DBClient, IniFiles;

type
  TdmData = class(TDataModule)
    qryTanques: TSQLQuery;
    dspTanques: TDataSetProvider;
    cdsTanques: TClientDataSet;
    dbConn: TSQLConnection;
    procedure DataModuleCreate(Sender: TObject);
    procedure dbConnBeforeConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmData: TdmData;

implementation

{$R *.dfm}

procedure TdmData.DataModuleCreate(Sender: TObject);
begin
  dbConn.Connected          :=  True;
end;

procedure TdmData.dbConnBeforeConnect(Sender: TObject);
  var
    s_Config      : TIniFile;
    s_Parametros  : TStringList;
    db_caminho    : string;
begin
  s_Config                  :=  TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'config.ini');
  s_Parametros              :=  TStringList.Create;

  try
    db_caminho              :=  s_Config.ReadString('CONFIG', 'db', '');

    with s_Parametros do
    begin
      Clear;
      Add('DriverName=Firebird');
      Add('Database='+ db_caminho);
      Add('User_Name=SYSDBA');
      Add('Password=masterkey');
      Add('ServerCharSet=WIN1252');
      Add('SQLDialect=3');
      Add('isolationlevel=ReadCommitted');
    end;

    with ConexaoDBX do
    begin
      try
        Params.Text         :=  s_Parametros.Text;
      except
        MSGerro('A v i s o!','Não foi possível conectar na base de dados.'+#13+#10+
                'Selecione uma Base de dados através do menu Arquivo -> Configurações.');
      end;
    end;
  finally
    s_Config.Free;
    s_Parametros.Free;
  end;
end;

end.
